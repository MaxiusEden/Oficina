/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package visao;

import javax.swing.*;
import java.awt.*;
import modelo.Cliente;
import persistencia.ClienteDAO;

public class TelaClienteForm extends JDialog {
    private JTextField txtNome, txtTelefone, txtLogradouro, txtNumero;
    private JTextField txtComplemento, txtEmail, txtCpf, txtCnpj;
    private JTextField txtContato, txtInscricaoEstadual;
    private JComboBox<String> cboTipoCliente;
    private JButton btnSalvar, btnCancelar;
    private ClienteDAO clienteDAO;
    private Cliente cliente;
    private boolean editando;

    public TelaClienteForm(Frame parent, boolean modal) {
        super(parent, modal);
        inicializar();
    }

    public TelaClienteForm(Frame parent, boolean modal, int idCliente) {
        super(parent, modal);
        editando = true;
        inicializar();
        carregarCliente(idCliente);
    }

    private void inicializar() {
        setTitle(editando ? "Editar Cliente" : "Novo Cliente");
        setSize(600, 500);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());
        clienteDAO = new ClienteDAO();

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // Tipo Cliente
        gbc.gridx = 0; gbc.gridy = 0;
        add(new JLabel("Tipo Cliente:"), gbc);
        cboTipoCliente = new JComboBox<>(new String[]{"FISICA", "JURIDICA"});
        gbc.gridx = 1;
        add(cboTipoCliente, gbc);

        // Nome
        gbc.gridx = 0; gbc.gridy = 1;
        add(new JLabel("Nome:"), gbc);
        txtNome = new JTextField(30);
        gbc.gridx = 1;
        add(txtNome, gbc);

        // Telefone
        gbc.gridx = 0; gbc.gridy = 2;
        add(new JLabel("Telefone:"), gbc);
        txtTelefone = new JTextField(15);
        gbc.gridx = 1;
        add(txtTelefone, gbc);

        // Logradouro
        gbc.gridx = 0; gbc.gridy = 3;
        add(new JLabel("Logradouro:"), gbc);
        txtLogradouro = new JTextField(30);
        gbc.gridx = 1;
        add(txtLogradouro, gbc);

        // Número
        gbc.gridx = 0; gbc.gridy = 4;
        add(new JLabel("Número:"), gbc);
        txtNumero = new JTextField(10);
        gbc.gridx = 1;
        add(txtNumero, gbc);

        // Complemento
        gbc.gridx = 0; gbc.gridy = 5;
        add(new JLabel("Complemento:"), gbc);
        txtComplemento = new JTextField(30);
        gbc.gridx = 1;
        add(txtComplemento, gbc);

        // Email
        gbc.gridx = 0; gbc.gridy = 6;
        add(new JLabel("Email:"), gbc);
        txtEmail = new JTextField(30);
        gbc.gridx = 1;
        add(txtEmail, gbc);

        // CPF
        gbc.gridx = 0; gbc.gridy = 7;
        add(new JLabel("CPF:"), gbc);
        txtCpf = new JTextField(11);
        gbc.gridx = 1;
        add(txtCpf, gbc);

        // CNPJ
        gbc.gridx = 0; gbc.gridy = 8;
        add(new JLabel("CNPJ:"), gbc);
        txtCnpj = new JTextField(14);
        gbc.gridx = 1;
        add(txtCnpj, gbc);

        // Contato
        gbc.gridx = 0; gbc.gridy = 9;
        add(new JLabel("Contato:"), gbc);
        txtContato = new JTextField(30);
        gbc.gridx = 1;
        add(txtContato, gbc);

        // Inscrição Estadual
        gbc.gridx = 0; gbc.gridy = 10;
        add(new JLabel("Inscrição Estadual:"), gbc);
        txtInscricaoEstadual = new JTextField(20);
        gbc.gridx = 1;
        add(txtInscricaoEstadual, gbc);

        // Botões
        JPanel painelBotoes = new JPanel();
        btnSalvar = new JButton("Salvar");
        btnCancelar = new JButton("Cancelar");
        painelBotoes.add(btnSalvar);
        painelBotoes.add(btnCancelar);

        gbc.gridx = 0; gbc.gridy = 11;
        gbc.gridwidth = 2;
        add(painelBotoes, gbc);

        // Eventos
        btnSalvar.addActionListener(e -> salvar());
        btnCancelar.addActionListener(e -> dispose());
        
        // Evento de mudança do tipo de cliente
        cboTipoCliente.addActionListener(e -> {
            boolean isFisica = cboTipoCliente.getSelectedItem().equals("FISICA");
            txtCpf.setEnabled(isFisica);
            txtCnpj.setEnabled(!isFisica);
            txtInscricaoEstadual.setEnabled(!isFisica);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void carregarCliente(int id) {
        cliente = clienteDAO.buscarPorId(id);
        if (cliente != null) {
            cboTipoCliente.setSelectedItem(cliente.getTipoCliente());
            txtNome.setText(cliente.getNome());
            txtTelefone.setText(cliente.getTelefone());
            txtLogradouro.setText(cliente.getLogradouro());
            txtNumero.setText(cliente.getNumero());
            txtComplemento.setText(cliente.getComplemento());
            txtEmail.setText(cliente.getEmail());
            txtCpf.setText(cliente.getCpf());
            txtCnpj.setText(cliente.getCnpj());
            txtContato.setText(cliente.getContato());
            txtInscricaoEstadual.setText(cliente.getInscricaoEstadual());
        }
    }

    private void salvar() {
        if (!validarCampos()) {
            return;
        }

        if (cliente == null) {
            cliente = new Cliente();
        }

        cliente.setTipoCliente(cboTipoCliente.getSelectedItem().toString());
        cliente.setNome(txtNome.getText());
        cliente.setTelefone(txtTelefone.getText());
        cliente.setLogradouro(txtLogradouro.getText());
        cliente.setNumero(txtNumero.getText());
        cliente.setComplemento(txtComplemento.getText());
        cliente.setEmail(txtEmail.getText());
        cliente.setCpf(txtCpf.getText());
        cliente.setCnpj(txtCnpj.getText());
        cliente.setContato(txtContato.getText());
        cliente.setInscricaoEstadual(txtInscricaoEstadual.getText());

        try {
            if (editando) {
                clienteDAO.atualizar(cliente);
            } else {
                clienteDAO.inserir(cliente);
            }
            JOptionPane.showMessageDialog(this, 
                "Cliente salvo com sucesso!", 
                "Sucesso", 
                JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Erro ao salvar cliente: " + e.getMessage(), 
                "Erro", 
                JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean validarCampos() {
        if (txtNome.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O nome é obrigatório!");
            txtNome.requestFocus();
            return false;
        }
        if (txtTelefone.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O telefone é obrigatório!");
            txtTelefone.requestFocus();
            return false;
        }
        
        String tipo = cboTipoCliente.getSelectedItem().toString();
        if (tipo.equals("FISICA") && txtCpf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O CPF é obrigatório para pessoa física!");
            txtCpf.requestFocus();
            return false;
        }
        if (tipo.equals("JURIDICA") && txtCnpj.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O CNPJ é obrigatório para pessoa jurídica!");
            txtCnpj.requestFocus();
            return false;
        }
        
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaClienteForm dialog = new TelaClienteForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
